---
# This script performs different parameters validation

######################################
# RepoManager-specific parameters validation
######################################

- name: Check parameter repomgr_install_into_tac
  fail:
    msg: Wrong value for parameter repomgr_install_into_tac - must be 'yes' or 'no'
  when: repomgr_install_into_tac != 'yes' and repomgr_install_into_tac != 'no'

#
# Extra check: if repomgr_install_into_tac == 'yes', then TAC must be installed at that moment
#
- name: Check talend-tac status in case of using RepoManager deployed to TAC
  shell: "set -o pipefail | rpm -qa talend-tac"
  args:
    warn: no
  when: repomgr_install_into_tac == "yes"
  changed_when: false
  register: tac_rpm_status

- name: Check that talend-tac is installed
  fail:
    msg: "{{ app_name }} RPM requires talend-tac RPM, but it is not installed, please check that 'tac' role is in the list"
  when: repomgr_install_into_tac == "yes" and tac_rpm_status.stdout == ""

#
# Validate parameters for RepoManager
#

- name: Check that parameter is not empty
  fail:
    msg: "Parameter {{ item.name }} cannot be empty !"
  when: item.value == ''
  with_items:
    - { name: "repomgr_database_url",      value: "{{ repomgr_database_url }}" }
    - { name: "repomgr_database_driver",   value: "{{ repomgr_database_driver }}" }
    - { name: "repomgr_database_username", value: "{{ repomgr_database_username }}" }
    - { name: "repomgr_database_config_password", value: "{{ repomgr_database_config_password }}" }
    - { name: "repomgr_localExtractPath",  value: "{{ repomgr_localExtractPath }}" }
